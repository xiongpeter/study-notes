1、用枚举类型的时候
		转json转失败
		
2、服务超时时间不管用：
	不能只设置一个，所有调用的服务都得设置
	feign.client.config.ucs-intelligence-service.connect-timeout=5000
	feign.client.config.ucs-intelligence-service.read-timeout=120000
	feign.client.config.ucs-management-service.connect-timeout=5000
	feign.client.config.ucs-management-service.read-timeout=120000
	feign.client.config.ucs-online-service.connect-timeout=5000
	feign.client.config.ucs-online-service.read-timeout=120000
	
3、build的时候，excel文件再tartget目录下生成的乱码
	原因：maven打包时，会编译特定文件导致文件不可用：
	解决办法：过滤不编译文件类型
	https://www.cnblogs.com/dashazia/p/11492159.html
	<plugin>
            <plugin>
				<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>utf-8</encoding>
                    <useDefaultDelimiters>true</useDefaultDelimiters>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>xls</nonFilteredFileExtension>
                        <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
			
			
4、redis set的时候是在python  set的，但是需要在java代码里面获取
	在java里通过exsit方法判断key是存在的，但是get(key)的时候获取为空
	
	原因：python的key是字符串类型的(设置了编码格式)，但是java调用get(key)的时候，会先把字符串的key转化为二进制，这样就跟python中set的key不一致了，所以会得到null的结果
	
	处理方式：if (!RedisUtils.exists("com.ubtrobot.icsp.15.trainresult")) {
                return;
            }
            String trainResultObj = new String(RedisUtils.get(("com.ubtrobot.icsp.15.trainresult").getBytes()));
			即可获取到 trainResultObj

			
	com.ubtrobot.icsp.15.trainresult.trainstarttime
	com.ubtrobot.icsp.15.trainresult
	com.ubtrobot.icsp.15.trainresult.traincompletetime
	com.ubtrobot.icsp.15.trainresult.times
	

5、idea的使用问题：
	当创建的文件夹名称为xxl-job时，不能再该文件夹下新建java class文件，因为xxl-job不符合java的文件夹命名规范
	
	
6、异步保存前端上传的文件偶现报错
	当我们接口参数为MultipartFile接受参数时，然后需要异步操作这个文件时，可能会涉及到文件的逻辑，此时就可能会出现如下错误
	.FileNotFoundException: C:\Users\ubt\AppData\Local\Temp\tomcat.3334126460636316452.40020\work\Tomcat\localhost\upload_4eed9e25_ff24_4b36_ae44_0db6f277256f_00000002.tmp (系统找不到指定的文件。)
	原因：
		当我们在子线程中执行保存逻辑是，如果主线程已经结束了，那么他会删除这个临时文件，所以就会报上述错误
	解决方式：
		可以使用Countdownlatch等待保存完成后，再让主线程退出，也可以使用其他的同步技术
	
7、jdk11下使用sun.awt.*包问题解决
	图形验证码功能需要使用sun.awt.*包的画图功能， docker容器中安装的jdk是11。 服务启动后报Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager错误。
	原因：
		jdk11中由于安全原因，在安装时去除了该功能。 在安装jdk8后会把信息的库包安装到系统中。
	解决方式：
		方式1：在docker容器中安装jdk8，在pom.xml中使用jdk1.8
		方式2：按照以下方式修改dockerfile内容
			FROM harbor-research.ubtrobot.com/base-library/ubtech-java:11
			#FROM harbor-research.ubtrobot.com/base-library/ubtech-java:8
			MAINTAINER taolong.hong taolong.hong@ubtrobot.com
			#docker镜像太简洁了，生成校验码需要使用到------------------------------重点是这里
			RUN yum install dejavu-sans-fonts fontconfig -y
			ADD vp-bodyposture-api-0.1-SNAPSHOT.jar app.jar
			#入口的命令，不用管，可以被覆盖，直接用ENTRYPOINT
			CMD ["java", "-version"]
			ENTRYPOINT ["java", "-jar","-Xms512m","-Xmx2g","-XX"]

8、Docker常用命令
	1、通过进程id查找容器
		docker ps -q | xargs docker inspect --format '{{.State.Pid}}, {{.Name}}' | grep ${pid}
		

9、前端使用form-data提交post表单请求，后台request.getParameter方法获取参数为空
	后台获取contentType：multipart/form-data;
	原因：请求参数全被被放到stream中了，没有放在request的parameterMap中
	解决办法：
		在获取参数之前加入以下代码：
		String contentType = request.getContentType();
		if (contentType != null && contentType.contains("multipart/form-data")) {
			MultipartResolver resolver = new CommonsMultipartResolver(request.getSession().getServletContext());
			MultipartHttpServletRequest multipartRequest = resolver.resolveMultipart(request);
			// 将转化后的 request 放入过滤链中
			request = multipartRequest;
		}
		String companyId = request.getParameter("companyId");
		String accountName = request.getParameter("accountName");